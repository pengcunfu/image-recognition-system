services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: image-recognition-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: image_recognition
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - ~/image-recognition-data/mysql/data:/var/lib/mysql
      - ~/image-recognition-data/mysql/logs:/var/log/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
      - ./docker/mysql/image_recognition.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - image-recognition-network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: image-recognition-redis
    restart: unless-stopped
    environment:
      TZ: Asia/Shanghai
    ports:
      - "6379:6379"
    volumes:
      - ~/image-recognition-data/redis/data:/data
    command: redis-server --appendonly yes
    networks:
      - image-recognition-network

  # Spring Boot 后端
  backend:
    build:
      context: ./image-recognition-server
      dockerfile: ../docker/Dockerfile.backend
    container_name: image-recognition-backend
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: prod
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: image_recognition
      MYSQL_USER: root
      MYSQL_PASSWORD: 123456
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: 
      DOUBAO_API_KEY: ${DOUBAO_API_KEY:-your_doubao_api_key}
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_key}
      VOLCENGINE_ACCESS_KEY_ID: ${VOLCENGINE_ACCESS_KEY_ID:-your_volcengine_access_key}
      VOLCENGINE_SECRET_ACCESS_KEY: ${VOLCENGINE_SECRET_ACCESS_KEY:-your_volcengine_secret_key}
      TZ: Asia/Shanghai
    ports:
      - "9094:9094"
    volumes:
      - ~/image-recognition-data/backend/logs:/app/logs
      - ~/image-recognition-data/backend/uploads:/app/uploads
    networks:
      - image-recognition-network
    depends_on:
      - mysql
      - redis


  # Vue.js 前端
  frontend:
    build:
      context: ./image-recognition-web
      dockerfile: ../docker/Dockerfile.frontend
    container_name: image-recognition-frontend
    restart: unless-stopped
    environment:
      TZ: Asia/Shanghai
    ports:
      - "80:80"
    volumes:
      - ~/image-recognition-data/frontend/logs:/var/log/nginx
    networks:
      - image-recognition-network
    depends_on:
      - backend


networks:
  image-recognition-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
